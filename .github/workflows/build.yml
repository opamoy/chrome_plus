name: Build Chrome++

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include: [
            { name: Chrome++_x86, arch: x86 },
            { name: Chrome++_x64, arch: x64 },
        ]

    name: ${{ matrix.name }}

    runs-on: windows-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Setup VC-LTL
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: nuget install VC-LTL

    - name: Setup Xmake
      uses: xmake-io/github-action-setup-xmake@v1

    - name: Configure Xmake
      run: xmake f -a ${{ matrix.arch }}

    - name: Build Chrome++
      run: xmake

    - name: Upload DLL
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: build/release

    - name: Create Tag
      id: create_tag
      run: |
        TAG_NAME=$(date +'%Y%m%d%H%M%S')
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
        git tag $TAG_NAME
        git push origin $TAG_NAME

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/release
        asset_name: ${{ matrix.name }}.zip
        asset_content_type: application/zip
